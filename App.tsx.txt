import React, { useState, useEffect } from 'react';
import { Menu, X, Globe, Home, Image, Calendar, Phone, User } from 'lucide-react';

interface NavigationItem {
  id: string;
  label: string;
  labelBn: string;
  icon: React.ReactNode;
  href: string;
}

function App() {
  const [currentLanguage, setCurrentLanguage] = useState<'en' | 'bn'>('en');
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [isScrolled, setIsScrolled] = useState(false);

  const navigation: NavigationItem[] = [
    { id: 'home', label: 'Home', labelBn: 'হোম', icon: <Home size={20} />, href: '/home.html' },
    { id: 'gallery', label: 'Gallery', labelBn: 'গ্যালারি', icon: <Image size={20} />, href: '/gallery.html' },
    { id: 'contact', label: 'Contact', labelBn: 'যোগাযোগ', icon: <Phone size={20} />, href: '/contact.html' },
    { id: 'routine', label: 'Routine', labelBn: 'রুটিন', icon: <Calendar size={20} />, href: '/routine.html' },
  ];

  useEffect(() => {
    const savedLanguage = localStorage.getItem('language') as 'en' | 'bn' || 'en';
    setCurrentLanguage(savedLanguage);

    const handleScroll = () => {
      setIsScrolled(window.scrollY > 50);
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  const toggleLanguage = () => {
    const newLanguage = currentLanguage === 'en' ? 'bn' : 'en';
    setCurrentLanguage(newLanguage);
    localStorage.setItem('language', newLanguage);
  };

  const getText = (en: string, bn: string) => {
    return currentLanguage === 'en' ? en : bn;
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-indigo-50 via-white to-purple-50">
      {/* Enhanced Background */}
      <div className="fixed inset-0 -z-10">
        <div className="absolute inset-0 bg-gradient-to-br from-indigo-100/20 via-purple-50/30 to-pink-100/20" />
        <div className="absolute top-0 left-0 w-full h-full bg-[radial-gradient(circle_at_30%_20%,rgba(120,119,198,0.1)_0%,transparent_50%)] animate-pulse" />
        <div className="absolute bottom-0 right-0 w-full h-full bg-[radial-gradient(circle_at_70%_80%,rgba(255,119,198,0.1)_0%,transparent_50%)] animate-pulse" />
      </div>

      {/* Header */}
      <header className={`fixed top-0 w-full z-50 transition-all duration-300 ${
        isScrolled ? 'bg-white/95 backdrop-blur-lg shadow-lg' : 'bg-white/80 backdrop-blur-sm'
      }`}>
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            {/* Logo */}
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-gradient-to-br from-indigo-500 to-purple-600 rounded-full flex items-center justify-center">
                <User className="w-6 h-6 text-white" />
              </div>
              <span className="text-xl font-bold bg-gradient-to-r from-indigo-600 to-purple-600 bg-clip-text text-transparent">
                Abdullah Fahim
              </span>
            </div>

            {/* Desktop Navigation */}
            <nav className="hidden md:flex items-center space-x-8">
              {navigation.map((item) => (
                <a
                  key={item.id}
                  href={item.href}
                  className="flex items-center space-x-2 text-gray-700 hover:text-indigo-600 transition-colors duration-200 font-medium"
                >
                  {item.icon}
                  <span>{getText(item.label, item.labelBn)}</span>
                </a>
              ))}
              
              <button
                onClick={toggleLanguage}
                className="p-2 rounded-full bg-indigo-100 hover:bg-indigo-200 transition-colors duration-200"
                aria-label="Toggle language"
              >
                <Globe className="w-5 h-5 text-indigo-600" />
              </button>
            </nav>

            {/* Mobile menu button */}
            <button
              onClick={() => setIsMenuOpen(!isMenuOpen)}
              className="md:hidden p-2 rounded-lg bg-gray-100 hover:bg-gray-200 transition-colors duration-200"
              aria-label="Toggle menu"
            >
              {isMenuOpen ? <X size={24} /> : <Menu size={24} />}
            </button>
          </div>
        </div>

        {/* Mobile Navigation */}
        {isMenuOpen && (
          <div className="md:hidden bg-white/95 backdrop-blur-lg border-t border-gray-200">
            <div className="px-4 py-4 space-y-3">
              {navigation.map((item) => (
                <a
                  key={item.id}
                  href={item.href}
                  className="flex items-center space-x-3 text-gray-700 hover:text-indigo-600 transition-colors duration-200 font-medium py-2"
                  onClick={() => setIsMenuOpen(false)}
                >
                  {item.icon}
                  <span>{getText(item.label, item.labelBn)}</span>
                </a>
              ))}
              
              <button
                onClick={toggleLanguage}
                className="flex items-center space-x-3 text-gray-700 hover:text-indigo-600 transition-colors duration-200 font-medium py-2"
              >
                <Globe size={20} />
                <span>{getText('Language', 'ভাষা')}</span>
              </button>
            </div>
          </div>
        )}
      </header>

      {/* Main Content */}
      <main className="pt-16">
        {/* Hero Section */}
        <section className="min-h-screen flex items-center justify-center px-4 sm:px-6 lg:px-8">
          <div className="max-w-4xl mx-auto text-center">
            <div className="bg-white/70 backdrop-blur-xl rounded-3xl p-8 sm:p-12 shadow-2xl border border-white/20">
              {/* Profile Image */}
              <div className="w-32 h-32 mx-auto mb-8 relative">
                <div className="w-full h-full bg-gradient-to-br from-indigo-500 to-purple-600 rounded-full flex items-center justify-center shadow-xl">
                  <User className="w-16 h-16 text-white" />
                </div>
                <div className="absolute -inset-2 bg-gradient-to-br from-indigo-400 to-purple-500 rounded-full -z-10 animate-pulse opacity-30" />
              </div>

              {/* Title */}
              <h1 className="text-4xl sm:text-5xl lg:text-6xl font-bold mb-6">
                <span className="bg-gradient-to-r from-indigo-600 via-purple-600 to-pink-600 bg-clip-text text-transparent">
                  {getText("Welcome to Abdullah Fahim's", "আব্দুল্লাহ ফাহিমের ওয়েবসাইটে")}
                </span>
                <br />
                <span className="bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">
                  {getText("Personal Website", "স্বাগতম")}
                </span>
              </h1>

              {/* Subtitle */}
              <p className="text-xl sm:text-2xl text-gray-600 mb-8 leading-relaxed">
                {getText(
                  "Explore my photo gallery, contact me, and check out my routine.",
                  "আমার ছবি গ্যালারি দেখুন, আমার সাথে যোগাযোগ করুন এবং আমার রুটিন পরীক্ষা করুন।"
                )}
              </p>

              {/* CTA Buttons */}
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <a
                  href="/gallery.html"
                  className="inline-flex items-center justify-center px-8 py-4 bg-gradient-to-r from-indigo-600 to-purple-600 text-white font-semibold rounded-2xl hover:from-indigo-700 hover:to-purple-700 transform hover:scale-105 transition-all duration-200 shadow-lg hover:shadow-xl"
                >
                  <Image className="w-5 h-5 mr-2" />
                  {getText("View Gallery", "গ্যালারি দেখুন")}
                </a>
                
                <a
                  href="/contact.html"
                  className="inline-flex items-center justify-center px-8 py-4 bg-white text-indigo-600 font-semibold rounded-2xl border-2 border-indigo-600 hover:bg-indigo-50 transform hover:scale-105 transition-all duration-200 shadow-lg hover:shadow-xl"
                >
                  <Phone className="w-5 h-5 mr-2" />
                  {getText("Get In Touch", "যোগাযোগ করুন")}
                </a>
              </div>
            </div>
          </div>
        </section>

        {/* Features Section */}
        <section className="py-20 px-4 sm:px-6 lg:px-8">
          <div className="max-w-7xl mx-auto">
            <div className="text-center mb-16">
              <h2 className="text-3xl sm:text-4xl font-bold mb-4">
                <span className="bg-gradient-to-r from-indigo-600 to-purple-600 bg-clip-text text-transparent">
                  {getText("Explore My World", "আমার জগৎ অন্বেষণ করুন")}
                </span>
              </h2>
              <p className="text-xl text-gray-600 max-w-3xl mx-auto">
                {getText(
                  "Discover different aspects of my life through various sections",
                  "বিভিন্ন বিভাগের মাধ্যমে আমার জীবনের বিভিন্ন দিক আবিষ্কার করুন"
                )}
              </p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
              {navigation.map((item, index) => (
                <a
                  key={item.id}
                  href={item.href}
                  className="group bg-white/70 backdrop-blur-xl rounded-2xl p-8 shadow-xl border border-white/20 hover:shadow-2xl transform hover:scale-105 transition-all duration-300"
                >
                  <div className="w-16 h-16 bg-gradient-to-br from-indigo-500 to-purple-600 rounded-2xl flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-300">
                    {React.cloneElement(item.icon as React.ReactElement, { 
                      className: "w-8 h-8 text-white" 
                    })}
                  </div>
                  
                  <h3 className="text-xl font-bold text-gray-800 mb-3">
                    {getText(item.label, item.labelBn)}
                  </h3>
                  
                  <p className="text-gray-600">
                    {getText(
                      `Explore my ${item.label.toLowerCase()} section`,
                      `আমার ${item.labelBn} বিভাগ দেখুন`
                    )}
                  </p>
                </a>
              ))}
            </div>
          </div>
        </section>
      </main>

      {/* Footer */}
      <footer className="bg-gray-900 text-white py-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <div className="flex items-center justify-center space-x-3 mb-4">
            <div className="w-8 h-8 bg-gradient-to-br from-indigo-500 to-purple-600 rounded-full flex items-center justify-center">
              <User className="w-4 h-4 text-white" />
            </div>
            <span className="text-xl font-bold">Abdullah Fahim</span>
          </div>
          
          <p className="text-gray-400 mb-6">
            {getText(
              "Personal website designed with care and attention to detail",
              "যত্ন এবং বিস্তারিত মনোযোগ দিয়ে ডিজাইন করা ব্যক্তিগত ওয়েবসাইট"
            )}
          </p>
          
          <div className="border-t border-gray-800 pt-6">
            <p className="text-gray-500 text-sm">
              © 2024 Abdullah Fahim. {getText("All rights reserved.", "সমস্ত অধিকার সংরক্ষিত।")}
            </p>
          </div>
        </div>
      </footer>
    </div>
  );
}

export default App;